// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cfif1982/cards/internal/repositories/bank (interfaces: BankRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/cfif1982/cards/internal/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockBankRepo is a mock of BankRepo interface.
type MockBankRepo struct {
	ctrl     *gomock.Controller
	recorder *MockBankRepoMockRecorder
}

// MockBankRepoMockRecorder is the mock recorder for MockBankRepo.
type MockBankRepoMockRecorder struct {
	mock *MockBankRepo
}

// NewMockBankRepo creates a new mock instance.
func NewMockBankRepo(ctrl *gomock.Controller) *MockBankRepo {
	mock := &MockBankRepo{ctrl: ctrl}
	mock.recorder = &MockBankRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBankRepo) EXPECT() *MockBankRepoMockRecorder {
	return m.recorder
}

// AddBank mocks base method.
func (m *MockBankRepo) AddBank(arg0 *models.Bank) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddBank", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddBank indicates an expected call of AddBank.
func (mr *MockBankRepoMockRecorder) AddBank(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBank", reflect.TypeOf((*MockBankRepo)(nil).AddBank), arg0)
}

// GetBankByID mocks base method.
func (m *MockBankRepo) GetBankByID(arg0 uuid.UUID) (*models.Bank, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBankByID", arg0)
	ret0, _ := ret[0].(*models.Bank)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBankByID indicates an expected call of GetBankByID.
func (mr *MockBankRepoMockRecorder) GetBankByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBankByID", reflect.TypeOf((*MockBankRepo)(nil).GetBankByID), arg0)
}
